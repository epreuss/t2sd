package frames;

import core.UserChat;
import chatPackage.IRoomChat;
import chatPackage.IUserChat;
import core.MessageThread;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Estevan
 */
public class Room extends javax.swing.JFrame {

    IRoomChat room;
    UserChat user;
    MessageThread thread;
    Integer[][] oldClock;
    String targetMsg;
    
    public Room(String roomName, IRoomChat room, UserChat user) throws RemoteException {
        initComponents();
        this.room = room;
        this.user = user;
        thread = new MessageThread(user);
        labelRoom.setText(roomName);
        labelUser.setText("User: " + user.usrName + "[" + user.id + "]");
        user.setAreaChat(areaChat);
        user.setAreaBuffer(areaBuffer);
        buttonSend.setEnabled(false);
        oldClock = new Integer[user.size][user.size];        
    }

    private void saveClock()
    {
        for (int i = 0; i < user.size; i++)
            for (int j = 0; j < user.size; j++)
                oldClock[i][j] = user.clock[i][j];  
    }
    
    public void sendMessage()
    {
        try {
            for (IUserChat listener : user.users.values())
                    listener.deliverMsg(user.usrName, fieldMsg.getText(), user.clock);
            user.clock[user.id][user.id] += 1;
        } catch (RemoteException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
        fieldMsg.setText("");
        buttonSend.setEnabled(false);
    }
    
    private void sendMessageToAllButTarget()
    {
        saveClock();
        targetMsg = fieldMsg.getText();
        try {
            for (IUserChat listener : user.users.values())
            {
                if (listener.getId() == Integer.parseInt(fieldTarget.getText()))
                    continue;
                listener.deliverMsg(user.usrName, fieldMsg.getText(), user.clock);
            }
            user.clock[user.id][user.id] += 1;
            user.printClock();

        } catch (RemoteException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    private void sendMessageToTarget()
    {
        try {
            for (IUserChat listener : user.users.values())
            {
                if (listener.getId() == Integer.parseInt(fieldTarget.getText()))
                {
                    listener.deliverMsg(user.usrName, targetMsg, oldClock);
                    return;
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }             
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelRoom = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        paneChat = new javax.swing.JScrollPane();
        areaChat = new javax.swing.JTextArea();
        fieldMsg = new javax.swing.JTextField();
        labelUser = new javax.swing.JLabel();
        labelChat = new javax.swing.JLabel();
        buttonSend = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        buttonTarget = new javax.swing.JButton();
        fieldTarget = new javax.swing.JTextField();
        buttonNotTarget = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaBuffer = new javax.swing.JTextArea();
        labelChat1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Room");
        setMinimumSize(new java.awt.Dimension(540, 400));
        setResizable(false);
        getContentPane().setLayout(null);

        labelRoom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelRoom.setText("Room");
        getContentPane().add(labelRoom);
        labelRoom.setBounds(10, 11, 160, 22);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 44, 510, 10);

        areaChat.setEditable(false);
        areaChat.setColumns(20);
        areaChat.setRows(5);
        paneChat.setViewportView(areaChat);

        getContentPane().add(paneChat);
        paneChat.setBounds(10, 83, 250, 191);

        fieldMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldMsgKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldMsgKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldMsgKeyTyped(evt);
            }
        });
        getContentPane().add(fieldMsg);
        fieldMsg.setBounds(10, 280, 250, 30);

        labelUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelUser.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUser.setText("User: Steve");
        getContentPane().add(labelUser);
        labelUser.setBounds(380, 10, 140, 30);

        labelChat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelChat.setText("Buffer");
        getContentPane().add(labelChat);
        labelChat.setBounds(270, 60, 60, 17);

        buttonSend.setText("Send to all");
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });
        getContentPane().add(buttonSend);
        buttonSend.setBounds(10, 320, 170, 30);

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });
        getContentPane().add(buttonExit);
        buttonExit.setBounds(190, 320, 70, 30);

        buttonTarget.setText("Target");
        buttonTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTargetActionPerformed(evt);
            }
        });
        getContentPane().add(buttonTarget);
        buttonTarget.setBounds(450, 280, 70, 30);

        fieldTarget.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        fieldTarget.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldTarget.setText("0");
        fieldTarget.setToolTipText("");
        getContentPane().add(fieldTarget);
        fieldTarget.setBounds(270, 280, 40, 30);

        buttonNotTarget.setText("All but target");
        buttonNotTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNotTargetActionPerformed(evt);
            }
        });
        getContentPane().add(buttonNotTarget);
        buttonNotTarget.setBounds(320, 280, 120, 30);

        areaBuffer.setEditable(false);
        areaBuffer.setColumns(20);
        areaBuffer.setRows(5);
        jScrollPane3.setViewportView(areaBuffer);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(270, 83, 250, 190);

        labelChat1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelChat1.setText("Chat");
        getContentPane().add(labelChat1);
        labelChat1.setBounds(10, 60, 29, 17);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        sendMessage();
    }//GEN-LAST:event_buttonSendActionPerformed

    private void fieldMsgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldMsgKeyPressed
        buttonSend.setEnabled(fieldMsg.getText().length() > 0);
        if (evt.getKeyCode() == 10) // Enter.
            sendMessage();
    }//GEN-LAST:event_fieldMsgKeyPressed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        User.main(user);
        dispose();
        try {
            room.leaveRoom(user.usrName);
        } catch (RemoteException ex) {
            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonExitActionPerformed

    private void fieldMsgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldMsgKeyReleased
        buttonSend.setEnabled(fieldMsg.getText().length() > 0);
    }//GEN-LAST:event_fieldMsgKeyReleased

    private void fieldMsgKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldMsgKeyTyped
        buttonSend.setEnabled(fieldMsg.getText().length() > 0);
    }//GEN-LAST:event_fieldMsgKeyTyped

    private void buttonTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTargetActionPerformed
        sendMessageToTarget();
    }//GEN-LAST:event_buttonTargetActionPerformed

    private void buttonNotTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNotTargetActionPerformed
        sendMessageToAllButTarget();
    }//GEN-LAST:event_buttonNotTargetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String roomName, IRoomChat room, UserChat user) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Room(roomName, room, user).setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaBuffer;
    private javax.swing.JTextArea areaChat;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonNotTarget;
    private javax.swing.JButton buttonSend;
    private javax.swing.JButton buttonTarget;
    private javax.swing.JTextField fieldMsg;
    private javax.swing.JTextField fieldTarget;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelChat;
    private javax.swing.JLabel labelChat1;
    private javax.swing.JLabel labelRoom;
    private javax.swing.JLabel labelUser;
    private javax.swing.JScrollPane paneChat;
    // End of variables declaration//GEN-END:variables
}
